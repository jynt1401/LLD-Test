/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/11Ke2xFhUtD
 */
import Link from "next/link"
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card"
import { useRouter } from "next/navigation";

import { useContext, useEffect, useState } from "react";
import HomeContext from '@/context/HomeContext';

export function Dashboard2() {
  const [Allrider, setAllrider] = useState([]);
  const [Alldriver, setAlldriver] = useState([]);
  const [OngoingRide, setOngoingRide] = useState([]);
  const [completed, setcompleted] = useState([]);
  const [feedback, setfeedback] = useState([]);
  const router = useRouter();

  const { auth, setauth } = useContext(HomeContext);
  
  const tkn=localStorage.getItem("authToken");

  const getAllrider = async () => {
    const response = await fetch("http://localhost:3001/getUsers", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        token: tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    console.log(leyy);
    if (leyy.success) {
      setAllrider(leyy.data);
    } else {
      alert("unable to fetch");
    }
  };
  const getAlldriver = async () => {
    const response = await fetch("http://localhost:3001/getDrivers", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        token: tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    console.log(leyy);
    if (leyy.success) {
      setAlldriver(leyy.data);
    } else {
      alert("unable to fetch");
    }
  };
  const getAllOngoingRides = async () => {
    const response = await fetch("http://localhost:3001/getOngoingRides", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        token: tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    console.log(leyy);
    if (leyy.success) {
      setOngoingRide(leyy.data);
    } else {
      alert("unable to fetch");
    }
  };
  const getAllCompletedRides = async () => {
    const response = await fetch("http://localhost:3001/getCompletedRides", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        token: tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    console.log(leyy);
    if (leyy.success) {
      setcompleted(leyy.data);
    } else {
      alert("unable to fetch");
    }
  };
  const getAllgetAllfeedbacks = async () => {
    const response = await fetch("http://localhost:3001/getAllfeedbacks", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        token: tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    console.log(leyy);
    if (leyy.success) {
      setfeedback(leyy.data);
    } else {
      alert("unable to fetch");
    }
  };
  useEffect(() => {
    getAllrider();
    getAlldriver();
    getAllOngoingRides();
    getAllCompletedRides();
    getAllgetAllfeedbacks();
  }, []);
  const eventHandlerLogout = () => {
    console.log("loggedout");
    console.log(auth)
    localStorage.removeItem("authToken");
    localStorage.removeItem("admin");
    setauth()
    console.log(auth)
    router.push('http://localhost:3000', { scroll: false })
  };
  useEffect(()=>{
    console.log(auth)
    },[auth])
  console.log(Allrider,Alldriver,OngoingRide,completed,feedback);
  return (
    (<div className="flex flex-col w-full min-h-screen">
      <header className="flex items-center h-16 px-4 border-b shrink-0 md:px-6">
        <nav
          className="flex-col hidden gap-6 text-lg font-medium md:flex md:flex-row md:items-center md:gap-5 md:text-sm lg:gap-6">
          
          <Link className="text-gray-500 dark:text-gray-400" href="#">
            Rides
          </Link>
        </nav>
      </header>
      <main
        className="flex min-h-[calc(100vh_-_theme(spacing.16))] flex-1 flex-col gap-4 p-4 md:gap-8 md:p-10">
        <div className="grid gap-4 md:grid-cols-3 lg:grid-cols-3">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between pb-2 space-y-0">
              <CardTitle className="text-sm font-medium">Total Riders</CardTitle>
              <UsersIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">+53</div>
              <p className="text-xs text-gray-500 dark:text-gray-400">+180.1% from last month</p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader className="flex flex-row items-center justify-between pb-2 space-y-0">
              <CardTitle className="text-sm font-medium">Total Drivers</CardTitle>
              <UsersIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">+12</div>
              <p className="text-xs text-gray-500 dark:text-gray-400">+19% from last month</p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader className="flex flex-row items-center justify-between pb-2 space-y-0">
              <CardTitle className="text-sm font-medium">Total Rides</CardTitle>
              <ActivityIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">+57</div>
              <p className="text-xs text-gray-500 dark:text-gray-400">+201 since last hour</p>
            </CardContent>
          </Card>
        </div>
        <div className="flex flex-col gap-4 md:flex-row md:gap-8">
          <Link
            className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
            href="http://localhost:3000/AllRidersadmin">
            View Riders
          </Link>
          <Link
            className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
            href="http://localhost:3000/AllDriversadmin">
            View Drivers
          </Link>
          <Link
            className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
            href="http://localhost:3000/AllOngoingRideAdmin">
            Ongoing Rides
          </Link>
          <Link
            className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
            href="http://localhost:3000/AllCompletedRideAdmin">
           Completed Rides
          </Link>
          <Link
            className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-8 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
            href="http://localhost:3000/AllFeedbacks">
            View Feedbacks
          </Link>
          <button className="w-full bg-[#FF0000] rounded-md p-2 font-medium" onClick={eventHandlerLogout}>
            Log Out
          </button>
        </div>
      </main>
    </div>)
  );
}


function CarIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 2 12v4c0 .6.4 1 1h2" />
      <circle cx="7" cy="17" r="2" />
      <path d="M9 17h6" />
      <circle cx="17" cy="17" r="2" />
    </svg>)
  );
}


function UsersIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M16 21v-2a4 4 0 0-4-4H6a4 0-4 4v2" />
      <circle cx="9" cy="7" r="4" />
      <path d="M22 21v-2a4 4 0 0-3-3.87" />
      <path d="M16 3.13a4 4 0 1 7.75" />
    </svg>)
  );
}


function ActivityIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M22 12h-4l-3 9L9 3l-3 9H2" />
    </svg>)
  );
}
