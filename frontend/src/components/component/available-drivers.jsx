/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/GCDLFxvMC7i
 */
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "@/components/ui/select";
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar";
import { CardContent, CardFooter, Card } from "@/components/ui/card";
import { useContext, useEffect, useState } from "react";
import HomeContext from "@/context/HomeContext";

export function AvailableDrivers() {
  
  const [list, setlist] = useState([]);
const tkn=localStorage.getItem("authToken");
  const getDriver = async () => {
    const response = await fetch("http://localhost:3001/availableDriver", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        "token": tkn,
      },
    });
    const data = await response.text();
    const leyy = JSON.parse(data);
    if(leyy.success){

      setlist(leyy.data);
    }else{
      alert("unable to fetch")
    }
  };
  useEffect(() => {
    getDriver();
  }, []);

  return (
    <div className="flex flex-col h-screen w-[70%] mx-auto">
      <header className="flex items-center justify-between p-4 bg-gray-800 text-white">
        <h1 className="text-2xl font-bold">Available Drivers</h1>
        <Button className="text-white border-white" variant="outline">
          Refresh
        </Button>
      </header>
      <main className="flex-1 overflow-y-auto p-4 bg-gray-100 dark:bg-gray-900">
        <section className="mb-6">
          <h2 className="text-lg font-semibold mb-2">Filter Drivers</h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <div>
              <Label htmlFor="location">Location</Label>
              <Input id="location" placeholder="Enter location" />
            </div>
            <div>
              <Label htmlFor="availability">Availability</Label>
              <Select id="availability">
                <SelectTrigger>
                  <SelectValue placeholder="Select availability" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="available">Available</SelectItem>
                  <SelectItem value="unavailable">Unavailable</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div>
              <Label htmlFor="vehicle">Vehicle Type</Label>
              <Select id="vehicle">
                <SelectTrigger>
                  <SelectValue placeholder="Select vehicle type" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="car">Car</SelectItem>
                  <SelectItem value="van">Van</SelectItem>
                  <SelectItem value="truck">Truck</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
        </section>
        <section>
          <h2 className="text-lg font-semibold mb-2">Drivers</h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            {list.map((value, key) => {
              return (
                <Card>
                  <CardContent className="flex items-center gap-4 mt-5">
                    <Avatar>
                      <AvatarImage
                        alt="Driver 1"
                        src="/placeholder-avatar.jpg"
                      />
                      <AvatarFallback>D1</AvatarFallback>
                    </Avatar>
                    <div>
                      <h3 className="text-lg font-semibold">
                        {value.first_name}
                      </h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        {value.last_name}
                      </p>
                      <p className="text-lg font-medium">{value.email}</p>
                    </div>
                  </CardContent>
                  <CardFooter>
                    <Button className="w-full" variant="outline">
                      View Details
                    </Button>
                  </CardFooter>
                </Card>
              );
            })}
          </div>
        </section>
      </main>
    </div>
  );
}
